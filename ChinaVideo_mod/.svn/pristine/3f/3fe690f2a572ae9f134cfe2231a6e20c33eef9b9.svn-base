package com.zhipu.chinavideo;

import org.json.JSONException;
import org.json.JSONObject;

import com.tencent.android.tpush.XGPushManager;
import com.umeng.analytics.MobclickAgent;
import com.zhipu.chinavideo.R;
import com.zhipu.chinavideo.util.APP;
import com.zhipu.chinavideo.util.MySlipSwitch;
import com.zhipu.chinavideo.util.MySlipSwitch.OnSwitchListener;
import com.zhipu.chinavideo.util.ThreadPoolWrap;
import com.zhipu.chinavideo.util.Utils;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class SettingActivity extends Activity implements OnClickListener {
	private ImageView back;
	private TextView title;
	private RelativeLayout back_login;
	private SharedPreferences preferences;
	private RelativeLayout feedback_rl;
	private RelativeLayout about_rl;
	private MySlipSwitch slipswitch_MSL;
	private RelativeLayout qingkonghuancun_rl;
	private Dialog dialog;
	private boolean isclosemsg = true;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_setting);

		this.dialog = Utils.showProgressDialog(this, "正在注销", true);
		back = (ImageView) findViewById(R.id.title_back);
		title = (TextView) findViewById(R.id.title_text);
		back_login = (RelativeLayout) findViewById(R.id.back_login);
		feedback_rl = (RelativeLayout) findViewById(R.id.feedback_rl);
		about_rl = (RelativeLayout) findViewById(R.id.about_rl);
		qingkonghuancun_rl = (RelativeLayout) findViewById(R.id.qingkonghuancun_rl);
		qingkonghuancun_rl.setOnClickListener(this);
		slipswitch_MSL = (MySlipSwitch) findViewById(R.id.main_myslipswitch);
		slipswitch_MSL.setImageResource(R.drawable.icon_on,
				R.drawable.icon_off, R.drawable.switch_thumb);
		feedback_rl.setOnClickListener(this);
		about_rl.setOnClickListener(this);
		back.setOnClickListener(this);
		back_login.setOnClickListener(this);
		title.setText("设置");
		preferences = getSharedPreferences(APP.MY_SP, Context.MODE_PRIVATE);
		// 如果用户是登录状态，显示注销按钮，如果用户不是登录状态，不显示注销按钮
		if (preferences.getString(APP.IS_LOGIN, "").equals("true")) {
			back_login.setVisibility(0);
		} else {
			back_login.setVisibility(8);
		}
		if ("1".equals(preferences.getString(APP.IS_CLOSEMSG, ""))) {
			isclosemsg = true;
		} else {
			isclosemsg = false;
		}
		slipswitch_MSL.setSwitchState(isclosemsg);
		/**
		 * 监听选择消息提醒
		 */
		slipswitch_MSL.setOnSwitchListener(new OnSwitchListener() {

			@Override
			public void onSwitched(boolean isSwitchOn) {
				// TODO Auto-generated method stub
				if (isSwitchOn) {
					// 打开消息提醒
					ShowMsg("打开消息提醒", 0);
				} else {
					// 关闭消息提醒
					ShowMsg("关闭消息提醒", 1);
				}
			}
		});
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.title_back:
			finish();
			break;
		case R.id.back_login:
			loginOut();
			break;
		case R.id.feedback_rl:
			startActivity(new Intent(SettingActivity.this,
					FeedbackActivity.class));
			break;
		case R.id.about_rl:
			startActivity(new Intent(SettingActivity.this, AboutActivity.class));
			break;
		case R.id.qingkonghuancun_rl:
			showcleancache();
			break;
		default:
			break;
		}
	}

	/**
	 * 注销登录
	 */
	private void loginOut() {
		dialog.show();
		Runnable outloginrun = new Runnable() {
			public void run() {
				String s = Utils.outlogin();
				try {
					JSONObject jsonObject = new JSONObject(s);
					int i = jsonObject.getInt("s");
					if (i == 1) {
						JSONObject data = jsonObject.getJSONObject("data");
						String id = data.getString("id");
						String secret = jsonObject.getString("secret");
						String nickname = data.getString("nickname");
						String icon = data.getString("icon");
						JSONObject auth = jsonObject.getJSONObject("auth");
						String timestamp = auth.getString("timestamp");
						String openkey = auth.getString("openkey");
						SharedPreferences preferences = getSharedPreferences(
								APP.MY_SP, Context.MODE_PRIVATE);
						Editor editor = preferences.edit();
						editor.putString(APP.IS_LOGIN, "false");
						editor.putString(APP.USER_ID, id);
						editor.putString(APP.USER_ICON, icon);
						editor.putString(APP.SECRET, secret);
						editor.putString(APP.TIMESTAMP, timestamp);
						editor.putString(APP.OPENKEY, openkey);
						editor.putString(APP.NICKNAME, nickname);
						editor.commit();
						handler.sendEmptyMessage(1);
					} else {
						handler.sendEmptyMessage(2);
					}
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					handler.sendEmptyMessage(2);
				}
			}
		};
		ThreadPoolWrap.getThreadPool().executeTask(outloginrun);
	}

	private Handler handler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 1:
				dialog.dismiss();
				Log.i("lvjian", "注销成功!");
				setResult(20, null);
				finish();
				break;
			case 2:
				dialog.dismiss();
				Utils.showToast(SettingActivity.this, "注销失败");
				Log.i("lvjian", "注销失败!");
				break;
			default:
				break;
			}
		};
	};

	private void showcleancache() {
		final AlertDialog localAlertDialog = new AlertDialog.Builder(this)
				.create();
		localAlertDialog.show();
		Window localWindow = localAlertDialog.getWindow();
		View localView = getLayoutInflater().inflate(R.layout.dialog_layout,
				null);
		Button quxiao = (Button) localView.findViewById(R.id.quxiao);
		Button queding = (Button) localView.findViewById(R.id.queding);
		quxiao.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				localAlertDialog.dismiss();
			}
		});
		queding.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				localAlertDialog.dismiss();
			}
		});
		localWindow.setContentView(localView);
	}

	private void ShowMsg(String msg, final int i) {
		final AlertDialog localAlertDialog = new AlertDialog.Builder(this)
				.create();
		localAlertDialog.show();
		Window localWindow = localAlertDialog.getWindow();
		View localView = getLayoutInflater().inflate(R.layout.dialog_layout,
				null);
		Button quxiao = (Button) localView.findViewById(R.id.quxiao);
		TextView moneynotenoth_title = (TextView) localView
				.findViewById(R.id.moneynotenoth_title);
		moneynotenoth_title.setText(msg);
		Button queding = (Button) localView.findViewById(R.id.queding);
		quxiao.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub

				localAlertDialog.dismiss();
			}
		});
		queding.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				if (i == 0) {
					XGPushManager.registerPush(SettingActivity.this);
					SharedPreferences.Editor edit = preferences.edit();
					edit.putString(APP.IS_CLOSEMSG, "1");
					edit.commit();
				} else {
					XGPushManager.unregisterPush(SettingActivity.this);
					SharedPreferences.Editor edit = preferences.edit();
					edit.putString(APP.IS_CLOSEMSG, "0");
					edit.commit();
				}
				localAlertDialog.dismiss();
			}
		});
		localWindow.setContentView(localView);
	}
	/**
	 * 友盟统计
	 */
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		MobclickAgent.onResume(this);
	}
	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
		MobclickAgent.onPause(this);
	}
}
